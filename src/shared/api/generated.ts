/**
 * Generated by orval v6.30.2 üç∫
 * Do not edit manually.
 * Blog API
 * OpenAPI spec version: 1.0.0
 */
import axios from "axios";
import type { AxiosRequestConfig, AxiosResponse } from "axios";
export type RaceArticleControllerSearchRaceArticlesParams = {
  query: string;
};

export type RaceArticleControllerDeleteRaceArticle200 = {
  success?: boolean;
};

export type CharacterArticleControllerSearchCharacterArticlesParams = {
  query: string;
};

export type CharacterArticleControllerDeleteCharacterArticle200 = {
  success?: boolean;
};

export type AuthControllerResetPassword200 = {
  success?: boolean;
};

export type AuthControllerLogoutUser200 = {
  success?: boolean;
};

/**
 * –Ø–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç–∞—Ç—å—è –ø—Ä–µ–º–∏—É–º-–∫–æ–Ω—Ç–µ–Ω—Ç–æ–º
 */
export type UpdateRaceArticleDtoIsPremium =
  (typeof UpdateRaceArticleDtoIsPremium)[keyof typeof UpdateRaceArticleDtoIsPremium];

export const UpdateRaceArticleDtoIsPremium = {
  true: "true",
  false: "false",
} as const;

export interface UpdateRaceArticleDto {
  /** –ö–ª–∞—Å—Å —Ä–∞—Å—ã */
  class: string;
  /** –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Å—Ç–∞—Ç—å–∏ */
  content: string;
  /** –û—Ç–ª–∏—á–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–∏–∑–Ω–∞–∫–∏ (—Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã–µ –∑–∞–ø—è—Ç—ã–º–∏) */
  distinctiveFeatures: string;
  /** –ü–ª–∞–Ω–µ—Ç–∞ –ø—Ä–æ–∏—Å—Ö–æ–∂–¥–µ–Ω–∏—è */
  homeWorld: string;
  /** –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∞—Ç—å–∏ */
  image: Blob;
  /** –Ø–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç–∞—Ç—å—è –ø—Ä–µ–º–∏—É–º-–∫–æ–Ω—Ç–µ–Ω—Ç–æ–º */
  isPremium: UpdateRaceArticleDtoIsPremium;
  /** –ò–∑–≤–µ—Å—Ç–Ω—ã–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª–∏ (ID –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã–µ –∑–∞–ø—è—Ç—ã–º–∏) */
  knownRepresentatives?: string;
  /** –Ø–∑—ã–∫ */
  language: string;
  /** –ù–∞–∑–≤–∞–Ω–∏–µ —Ä–∞—Å—ã */
  raceName: string;
  /** –¶–≤–µ—Ç –∫–æ–∂–∏ */
  skinColor: string;
  /** –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç–∞—Ç—å–∏ */
  title: string;
  /** –¢–∏–ø —Ä–∞—Å—ã */
  type: string;
}

/**
 * –Ø–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç–∞—Ç—å—è –ø—Ä–µ–º–∏—É–º-–∫–æ–Ω—Ç–µ–Ω—Ç–æ–º
 */
export type CreateRaceArticleDtoIsPremium =
  (typeof CreateRaceArticleDtoIsPremium)[keyof typeof CreateRaceArticleDtoIsPremium];

export const CreateRaceArticleDtoIsPremium = {
  true: "true",
  false: "false",
} as const;

export interface CreateRaceArticleDto {
  /** –ö–ª–∞—Å—Å —Ä–∞—Å—ã */
  class: string;
  /** –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Å—Ç–∞—Ç—å–∏ */
  content: string;
  /** –û—Ç–ª–∏—á–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–∏–∑–Ω–∞–∫–∏ (—Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã–µ –∑–∞–ø—è—Ç—ã–º–∏) */
  distinctiveFeatures: string;
  /** –ü–ª–∞–Ω–µ—Ç–∞ –ø—Ä–æ–∏—Å—Ö–æ–∂–¥–µ–Ω–∏—è */
  homeWorld: string;
  /** –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∞—Ç—å–∏ */
  image: Blob;
  /** –Ø–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç–∞—Ç—å—è –ø—Ä–µ–º–∏—É–º-–∫–æ–Ω—Ç–µ–Ω—Ç–æ–º */
  isPremium: CreateRaceArticleDtoIsPremium;
  /** –ò–∑–≤–µ—Å—Ç–Ω—ã–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª–∏ (ID –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã–µ –∑–∞–ø—è—Ç—ã–º–∏) */
  knownRepresentatives?: string;
  /** –Ø–∑—ã–∫ */
  language: string;
  /** –ù–∞–∑–≤–∞–Ω–∏–µ —Ä–∞—Å—ã */
  raceName: string;
  /** –¶–≤–µ—Ç –∫–æ–∂–∏ */
  skinColor: string;
  /** –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç–∞—Ç—å–∏ */
  title: string;
  /** –¢–∏–ø —Ä–∞—Å—ã */
  type: string;
}

export interface KnownRepresentativeResponseDto {
  /** ID –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ */
  _id: string;
  /** –ò–º—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ */
  name: string;
}

export interface ResponseRaceArticleDto {
  _id: string;
  author: ResponseUserDto;
  /** –ö–ª–∞—Å—Å —Ä–∞—Å—ã */
  class: string;
  content: string;
  createdAt: string;
  /** –û—Ç–ª–∏—á–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–∏–∑–Ω–∞–∫–∏ */
  distinctiveFeatures: string[];
  /** –ü–ª–∞–Ω–µ—Ç–∞ –ø—Ä–æ–∏—Å—Ö–æ–∂–¥–µ–Ω–∏—è */
  homeWorld: string;
  image: string;
  isPremium: boolean;
  /** –ò–∑–≤–µ—Å—Ç–Ω—ã–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª–∏ */
  knownRepresentatives: KnownRepresentativeResponseDto[];
  /** –Ø–∑—ã–∫ */
  language: string;
  likesCount: number;
  /** –ù–∞–∑–≤–∞–Ω–∏–µ —Ä–∞—Å—ã */
  raceName: string;
  readingTime: number;
  /** –¶–≤–µ—Ç –∫–æ–∂–∏ */
  skinColor: string;
  title: string;
  /** –¢–∏–ø —Ä–∞—Å—ã */
  type: string;
  updatedAt: string;
}

/**
 * –Ø–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç–∞—Ç—å—è –ø—Ä–µ–º–∏—É–º-–∫–æ–Ω—Ç–µ–Ω—Ç–æ–º
 */
export type UpdateCharacterArticleDtoIsPremium =
  (typeof UpdateCharacterArticleDtoIsPremium)[keyof typeof UpdateCharacterArticleDtoIsPremium];

export const UpdateCharacterArticleDtoIsPremium = {
  true: "true",
  false: "false",
} as const;

/**
 * –ü–æ–ª –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
 */
export type UpdateCharacterArticleDtoGender =
  (typeof UpdateCharacterArticleDtoGender)[keyof typeof UpdateCharacterArticleDtoGender];

export const UpdateCharacterArticleDtoGender = {
  –ú—É–∂—Å–∫–æ–π: "–ú—É–∂—Å–∫–æ–π",
  –ñ–µ–Ω—Å–∫–∏–π: "–ñ–µ–Ω—Å–∫–∏–π",
  –î—Ä—É–≥–æ–µ: "–î—Ä—É–≥–æ–µ",
} as const;

export interface UpdateCharacterArticleDto {
  /** –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è */
  birthDate?: string;
  /** –ò–º—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ */
  characterName: string;
  /** –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Å—Ç–∞—Ç—å–∏ */
  content: string;
  /** –î–∞—Ç–∞ —Å–º–µ—Ä—Ç–∏ */
  deathDate?: string;
  /** –ü–æ–ª –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ */
  gender: UpdateCharacterArticleDtoGender;
  /** –†–æ—Å—Ç –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ */
  height?: string;
  /** –†–æ–¥–Ω–æ–π –º–∏—Ä –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ */
  homeWorld: string;
  /** –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∞—Ç—å–∏ */
  image: Blob;
  /** –Ø–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç–∞—Ç—å—è –ø—Ä–µ–º–∏—É–º-–∫–æ–Ω—Ç–µ–Ω—Ç–æ–º */
  isPremium: UpdateCharacterArticleDtoIsPremium;
  /** ID —Ä–∞—Å—ã –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ */
  race?: string;
  /** –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç–∞—Ç—å–∏ */
  title: string;
}

/**
 * –Ø–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç–∞—Ç—å—è –ø—Ä–µ–º–∏—É–º-–∫–æ–Ω—Ç–µ–Ω—Ç–æ–º
 */
export type CreateCharacterArticleDtoIsPremium =
  (typeof CreateCharacterArticleDtoIsPremium)[keyof typeof CreateCharacterArticleDtoIsPremium];

export const CreateCharacterArticleDtoIsPremium = {
  true: "true",
  false: "false",
} as const;

/**
 * –ü–æ–ª –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
 */
export type CreateCharacterArticleDtoGender =
  (typeof CreateCharacterArticleDtoGender)[keyof typeof CreateCharacterArticleDtoGender];

export const CreateCharacterArticleDtoGender = {
  –ú—É–∂—Å–∫–æ–π: "–ú—É–∂—Å–∫–æ–π",
  –ñ–µ–Ω—Å–∫–∏–π: "–ñ–µ–Ω—Å–∫–∏–π",
  –î—Ä—É–≥–æ–µ: "–î—Ä—É–≥–æ–µ",
} as const;

export interface CreateCharacterArticleDto {
  /** –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è */
  birthDate?: string;
  /** –ò–º—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ */
  characterName: string;
  /** –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Å—Ç–∞—Ç—å–∏ */
  content: string;
  /** –î–∞—Ç–∞ —Å–º–µ—Ä—Ç–∏ */
  deathDate?: string;
  /** –ü–æ–ª –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ */
  gender: CreateCharacterArticleDtoGender;
  /** –†–æ—Å—Ç –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ */
  height?: string;
  /** –†–æ–¥–Ω–æ–π –º–∏—Ä –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ */
  homeWorld: string;
  /** –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∞—Ç—å–∏ */
  image: Blob;
  /** –Ø–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç–∞—Ç—å—è –ø—Ä–µ–º–∏—É–º-–∫–æ–Ω—Ç–µ–Ω—Ç–æ–º */
  isPremium: CreateCharacterArticleDtoIsPremium;
  /** ID —Ä–∞—Å—ã –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ */
  race?: string;
  /** –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç–∞—Ç—å–∏ */
  title: string;
}

export interface GetPaymentDto {
  /** ID –ø–ª–∞—Ç–µ–∂–∞ */
  id: string;
}

export interface RecipientDto {
  account_id: string;
  gateway_id: string;
}

export interface MetadataDto {
  order_id: string;
}

export interface ConfirmationDto {
  confirmation_url: string;
  type: string;
}

export interface AmountDto {
  currency: string;
  value: string;
}

export interface ResponsePaymentDto {
  amount: AmountDto;
  confirmation: ConfirmationDto;
  created_at: string;
  description: string;
  id: string;
  metadata: MetadataDto;
  paid: boolean;
  recipient: RecipientDto;
  refundable: boolean;
  status: string;
  test: boolean;
}

export interface CreatePaymentDto {
  /** –°—É–º–º–∞ –ø–ª–∞—Ç–µ–∂–∞ */
  amount: number;
}

export interface RaceInfo {
  /** ID —Ä–∞—Å—ã */
  _id: string;
  /** –ù–∞–∑–≤–∞–Ω–∏–µ —Ä–∞—Å—ã */
  raceName: string;
}

export interface ResponseCharacterArticleDto {
  _id: string;
  author: ResponseUserDto;
  /** –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ */
  birthDate?: string;
  /** –ò–º—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ */
  characterName: string;
  content: string;
  createdAt: string;
  /** –î–∞—Ç–∞ —Å–º–µ—Ä—Ç–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ */
  deathDate?: string;
  /** –ü–æ–ª –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ */
  gender: string;
  /** –†–æ—Å—Ç –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ */
  height?: string;
  /** –†–æ–¥–Ω–æ–π –º–∏—Ä –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ */
  homeWorld: string;
  image: string;
  isPremium: boolean;
  likesCount: number;
  /** –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–∞—Å–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ */
  race?: RaceInfo;
  readingTime: number;
  title: string;
  updatedAt: string;
}

export interface ResponseRollCharacterDto {
  /** id –ø–æ–ª—É—á–µ–Ω–Ω–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂ */
  character: string;
  /** –§–ª–∞–≥, —É–∫–∞–∑—ã–≤–∞—é—â–∏–π, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂ –Ω–æ–≤—ã–º –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ */
  isNew: boolean;
  /** –û—Å—Ç–∞–≤—à–µ–µ—Å—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±—Ä–æ—Å–∫–æ–≤ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è */
  remainingRolls: number;
}

export interface ResponseUserCollectionDto {
  /** ID –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */
  _id: string;
  /** –°–ø–∏—Å–æ–∫ id –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ */
  characters: string[];
  createdAt: string;
  /** –î–∞—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –±—Ä–æ—Å–∫–∞ */
  lastRollDate: string;
  /** –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±—Ä–æ—Å–∫–æ–≤ —Å–µ–≥–æ–¥–Ω—è */
  rollsToday: number;
  updatedAt: string;
  /** ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */
  user: string;
}

export interface UpdatePasswordDto {
  /** –ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å */
  newPassword: string;
  /** –¢–æ–∫–µ–Ω —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è */
  resetToken: string;
}

export interface ResetPasswordDto {
  /** Email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */
  email: string;
}

export interface LoginDto {
  /** Email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */
  email: string;
  /** –ü–∞—Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */
  password: string;
}

export interface RegisterDto {
  /** Email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */
  email: string;
  /** –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */
  name: string;
  /** –ü–∞—Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */
  password: string;
}

export interface UpdateProfileDto {
  /** –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ */
  about?: string;
  /** –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è */
  avatar?: Blob;
  /** –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */
  name: string;
}

/**
 * –î–µ–π—Å—Ç–≤–∏–µ —Å –∏–∑–±—Ä–∞–Ω–Ω–æ–π —Å—Ç–∞—Ç—å–µ–π
 */
export type ToggleFavoriteArticleDtoAction =
  (typeof ToggleFavoriteArticleDtoAction)[keyof typeof ToggleFavoriteArticleDtoAction];

export const ToggleFavoriteArticleDtoAction = {
  add: "add",
  remove: "remove",
} as const;

export interface ToggleFavoriteArticleDto {
  /** –î–µ–π—Å—Ç–≤–∏–µ —Å –∏–∑–±—Ä–∞–Ω–Ω–æ–π —Å—Ç–∞—Ç—å–µ–π */
  action: ToggleFavoriteArticleDtoAction;
  /** ID —Å—Ç–∞—Ç—å–∏ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è/—É–¥–∞–ª–µ–Ω–∏—è –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ */
  articleId: string;
}

export interface ResponseUserDto {
  /** ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */
  _id: string;
  /** –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ */
  about?: string;
  /** –ê–≤–∞—Ç–∞—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */
  avatar?: string;
  createdAt: string;
  /** Email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */
  email: string;
  /** –°–ø–∏—Å–æ–∫ ID –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö —Å—Ç–∞—Ç–µ–π */
  favorite_articles: string[];
  /** –°—Ç–∞—Ç—É—Å –ø—Ä–µ–º–∏—É–º-–ø–æ–¥–ø–∏—Å–∫–∏ */
  isPremium: boolean;
  /** –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */
  name: string;
  updatedAt: string;
}

const instance = axios.create({
  baseURL: process.env.NEXT_PUBLIC_API_URL,
  withCredentials: true,
});

/**
 * @summary –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
 */
export const usersControllerGetAllUsers = <
  TData = AxiosResponse<ResponseUserDto[]>,
>(
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return instance.get(`/users`, options);
};

/**
 * @summary –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
export const usersControllerGetProfile = <
  TData = AxiosResponse<ResponseUserDto>,
>(
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return instance.get(`/users/profile`, options);
};

/**
 * @summary –ü–æ–ª—É—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID
 */
export const usersControllerGetUserById = <
  TData = AxiosResponse<ResponseUserDto>,
>(
  id: string,
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return instance.get(`/users/${id}`, options);
};

/**
 * @summary –î–æ–±–∞–≤–∏—Ç—å/—É–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ç—å—é –≤/–∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
 */
export const usersControllerToggleFavoriteArticle = <
  TData = AxiosResponse<ResponseUserDto>,
>(
  toggleFavoriteArticleDto: ToggleFavoriteArticleDto,
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return instance.patch(
    `/users/favorite-article`,
    toggleFavoriteArticleDto,
    options,
  );
};

/**
 * @summary –û–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
export const usersControllerUpdateProfile = <
  TData = AxiosResponse<ResponseUserDto>,
>(
  updateProfileDto: UpdateProfileDto,
  options?: AxiosRequestConfig,
): Promise<TData> => {
  const formData = new FormData();
  formData.append("name", updateProfileDto.name);
  if (updateProfileDto.about !== undefined) {
    formData.append("about", updateProfileDto.about);
  }
  if (updateProfileDto.avatar !== undefined) {
    formData.append("avatar", updateProfileDto.avatar);
  }

  return instance.patch(`/users/update-profile`, formData, options);
};

/**
 * @summary –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
export const authControllerRegisterUser = <
  TData = AxiosResponse<ResponseUserDto>,
>(
  registerDto: RegisterDto,
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return instance.post(`/auth/sign-up`, registerDto, options);
};

/**
 * @summary –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
export const authControllerAuthenticateUser = <
  TData = AxiosResponse<ResponseUserDto>,
>(
  loginDto: LoginDto,
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return instance.post(`/auth/sign-in`, loginDto, options);
};

/**
 * @summary –í—ã—Ö–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
export const authControllerLogoutUser = <
  TData = AxiosResponse<AuthControllerLogoutUser200>,
>(
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return instance.post(`/auth/logout`, undefined, options);
};

/**
 * @summary –ó–∞–ø—Ä–æ—Å –Ω–∞ —Å–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è
 */
export const authControllerResetPassword = <
  TData = AxiosResponse<AuthControllerResetPassword200>,
>(
  resetPasswordDto: ResetPasswordDto,
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return instance.post(`/auth/reset-password`, resetPasswordDto, options);
};

/**
 * @summary –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è
 */
export const authControllerResetPasswordConfirm = <
  TData = AxiosResponse<ResponseUserDto>,
>(
  updatePasswordDto: UpdatePasswordDto,
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return instance.post(
    `/auth/reset-password-confirm`,
    updatePasswordDto,
    options,
  );
};

/**
 * @summary –ü–æ–ª—É—á–∏—Ç—å –∫–æ–ª–ª–µ–∫—Ü–∏—é —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
export const userCollectionControllerGetUserCollection = <
  TData = AxiosResponse<ResponseUserCollectionDto>,
>(
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return instance.get(`/user-collection`, options);
};

/**
 * @summary –ü–æ–ª—É—á–∏—Ç—å —Å–ª—É—á–∞–π–Ω–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
 */
export const userCollectionControllerRollCharacter = <
  TData = AxiosResponse<ResponseRollCharacterDto>,
>(
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return instance.post(`/user-collection/roll`, undefined, options);
};

export const userCollectionControllerResetDailyRolls = <
  TData = AxiosResponse<void>,
>(
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return instance.post(
    `/user-collection/reset-daily-rolls`,
    undefined,
    options,
  );
};

/**
 * @summary –°–æ–∑–¥–∞—Ç—å –ø–ª–∞—Ç–µ–∂
 */
export const paymentControllerCreatePayment = <
  TData = AxiosResponse<ResponsePaymentDto>,
>(
  createPaymentDto: CreatePaymentDto,
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return instance.post(`/payment`, createPaymentDto, options);
};

/**
 * @summary –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–ª–∞—Ç–µ–∂–µ
 */
export const paymentControllerGetPayment = <
  TData = AxiosResponse<ResponsePaymentDto>,
>(
  getPaymentDto: GetPaymentDto,
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return instance.post(`/payment/get-payment`, getPaymentDto, options);
};

/**
 * @summary –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ —Å—Ç–∞—Ç—å–∏ –æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞—Ö
 */
export const characterArticleControllerGetAllCharacterArticles = <
  TData = AxiosResponse<ResponseCharacterArticleDto[]>,
>(
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return instance.get(`/character-articles/all`, options);
};

/**
 * @summary –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –º–æ–∏ —Å—Ç–∞—Ç—å–∏ –æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞—Ö
 */
export const characterArticleControllerGetMyAllCharacterArticles = <
  TData = AxiosResponse<ResponseCharacterArticleDto[]>,
>(
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return instance.get(`/character-articles/my-all`, options);
};

/**
 * @summary –ü–æ–ª—É—á–∏—Ç—å –æ–¥–Ω—É —Å—Ç–∞—Ç—å—é –æ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ
 */
export const characterArticleControllerGetOneCharacterArticle = <
  TData = AxiosResponse<ResponseCharacterArticleDto>,
>(
  id: string,
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return instance.get(`/character-articles/find/${id}`, options);
};

/**
 * @summary –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—å–∏ –æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞—Ö –ø–æ —Ä–∞—Å–µ
 */
export const characterArticleControllerGetArticlesByRace = <
  TData = AxiosResponse<ResponseCharacterArticleDto[]>,
>(
  raceId: string,
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return instance.get(`/character-articles/by-race/${raceId}`, options);
};

/**
 * @summary –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é —Å—Ç–∞—Ç—å—é –æ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ
 */
export const characterArticleControllerCreateCharacterArticle = <
  TData = AxiosResponse<void>,
>(
  createCharacterArticleDto: CreateCharacterArticleDto,
  options?: AxiosRequestConfig,
): Promise<TData> => {
  const formData = new FormData();
  formData.append("title", createCharacterArticleDto.title);
  formData.append("content", createCharacterArticleDto.content);
  formData.append("isPremium", createCharacterArticleDto.isPremium);
  formData.append("image", createCharacterArticleDto.image);
  formData.append("characterName", createCharacterArticleDto.characterName);
  if (createCharacterArticleDto.birthDate !== undefined) {
    formData.append("birthDate", createCharacterArticleDto.birthDate);
  }
  if (createCharacterArticleDto.deathDate !== undefined) {
    formData.append("deathDate", createCharacterArticleDto.deathDate);
  }
  if (createCharacterArticleDto.race !== undefined) {
    formData.append("race", createCharacterArticleDto.race);
  }
  formData.append("gender", createCharacterArticleDto.gender);
  if (createCharacterArticleDto.height !== undefined) {
    formData.append("height", createCharacterArticleDto.height);
  }
  formData.append("homeWorld", createCharacterArticleDto.homeWorld);

  return instance.post(`/character-articles/create`, formData, options);
};

/**
 * @summary –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—å—é –æ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ
 */
export const characterArticleControllerUpdateCharacterArticle = <
  TData = AxiosResponse<ResponseCharacterArticleDto>,
>(
  id: string,
  updateCharacterArticleDto: UpdateCharacterArticleDto,
  options?: AxiosRequestConfig,
): Promise<TData> => {
  const formData = new FormData();
  formData.append("title", updateCharacterArticleDto.title);
  formData.append("content", updateCharacterArticleDto.content);
  formData.append("isPremium", updateCharacterArticleDto.isPremium);
  formData.append("image", updateCharacterArticleDto.image);
  formData.append("characterName", updateCharacterArticleDto.characterName);
  if (updateCharacterArticleDto.birthDate !== undefined) {
    formData.append("birthDate", updateCharacterArticleDto.birthDate);
  }
  if (updateCharacterArticleDto.deathDate !== undefined) {
    formData.append("deathDate", updateCharacterArticleDto.deathDate);
  }
  if (updateCharacterArticleDto.race !== undefined) {
    formData.append("race", updateCharacterArticleDto.race);
  }
  formData.append("gender", updateCharacterArticleDto.gender);
  if (updateCharacterArticleDto.height !== undefined) {
    formData.append("height", updateCharacterArticleDto.height);
  }
  formData.append("homeWorld", updateCharacterArticleDto.homeWorld);

  return instance.patch(`/character-articles/update/${id}`, formData, options);
};

/**
 * @summary –£–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ç—å—é –æ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ
 */
export const characterArticleControllerDeleteCharacterArticle = <
  TData = AxiosResponse<CharacterArticleControllerDeleteCharacterArticle200>,
>(
  id: string,
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return instance.delete(`/character-articles/delete/${id}`, options);
};

/**
 * @summary –ü–æ–∏—Å–∫ —Å—Ç–∞—Ç–µ–π –æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞—Ö
 */
export const characterArticleControllerSearchCharacterArticles = <
  TData = AxiosResponse<ResponseCharacterArticleDto[]>,
>(
  params: CharacterArticleControllerSearchCharacterArticlesParams,
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return instance.get(`/character-articles/search`, {
    ...options,
    params: { ...params, ...options?.params },
  });
};

/**
 * @summary –õ–∞–π–∫–Ω—É—Ç—å —Å—Ç–∞—Ç—å—é –æ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ
 */
export const characterArticleControllerLikeCharacterArticle = <
  TData = AxiosResponse<ResponseCharacterArticleDto>,
>(
  id: string,
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return instance.post(`/character-articles/like/${id}`, undefined, options);
};

/**
 * @summary –£–±—Ä–∞—Ç—å –ª–∞–π–∫ —Å–æ —Å—Ç–∞—Ç—å–∏ –æ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ
 */
export const characterArticleControllerUnlikeCharacterArticle = <
  TData = AxiosResponse<ResponseCharacterArticleDto>,
>(
  id: string,
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return instance.post(`/character-articles/unlike/${id}`, undefined, options);
};

/**
 * @summary –ü–æ–ª—É—á–∏—Ç—å —Ç–æ–ø-5 —Å—Ç–∞—Ç–µ–π –æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞—Ö
 */
export const characterArticleControllerGetTopCharacterArticles = <
  TData = AxiosResponse<ResponseCharacterArticleDto[]>,
>(
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return instance.get(`/character-articles/top`, options);
};

/**
 * @summary –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ —Å—Ç–∞—Ç—å–∏ –æ —Ä–∞—Å–∞—Ö
 */
export const raceArticleControllerGetAllRaceArticles = <
  TData = AxiosResponse<ResponseRaceArticleDto[]>,
>(
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return instance.get(`/race-articles/all`, options);
};

/**
 * @summary –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –º–æ–∏ —Å—Ç–∞—Ç—å–∏ –æ —Ä–∞—Å–∞—Ö
 */
export const raceArticleControllerGetMyAllRaceArticles = <
  TData = AxiosResponse<ResponseRaceArticleDto[]>,
>(
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return instance.get(`/race-articles/my-all`, options);
};

/**
 * @summary –ü–æ–ª—É—á–∏—Ç—å –æ–¥–Ω—É —Å—Ç–∞—Ç—å—é –æ —Ä–∞—Å–µ
 */
export const raceArticleControllerGetOneRaceArticle = <
  TData = AxiosResponse<ResponseRaceArticleDto>,
>(
  id: string,
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return instance.get(`/race-articles/find/${id}`, options);
};

/**
 * @summary –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é —Å—Ç–∞—Ç—å—é –æ —Ä–∞—Å–µ
 */
export const raceArticleControllerCreateRaceArticle = <
  TData = AxiosResponse<ResponseUserDto | ResponseRaceArticleDto>,
>(
  createRaceArticleDto: CreateRaceArticleDto,
  options?: AxiosRequestConfig,
): Promise<TData> => {
  const formData = new FormData();
  formData.append("title", createRaceArticleDto.title);
  formData.append("content", createRaceArticleDto.content);
  formData.append("isPremium", createRaceArticleDto.isPremium);
  formData.append("image", createRaceArticleDto.image);
  formData.append("raceName", createRaceArticleDto.raceName);
  formData.append("type", createRaceArticleDto.type);
  formData.append("class", createRaceArticleDto.class);
  formData.append("skinColor", createRaceArticleDto.skinColor);
  formData.append(
    "distinctiveFeatures",
    createRaceArticleDto.distinctiveFeatures,
  );
  formData.append("homeWorld", createRaceArticleDto.homeWorld);
  formData.append("language", createRaceArticleDto.language);
  if (createRaceArticleDto.knownRepresentatives !== undefined) {
    formData.append(
      "knownRepresentatives",
      createRaceArticleDto.knownRepresentatives,
    );
  }

  return instance.post(`/race-articles/create`, formData, options);
};

/**
 * @summary –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—å—é –æ —Ä–∞—Å–µ
 */
export const raceArticleControllerUpdateRaceArticle = <
  TData = AxiosResponse<ResponseRaceArticleDto>,
>(
  id: string,
  updateRaceArticleDto: UpdateRaceArticleDto,
  options?: AxiosRequestConfig,
): Promise<TData> => {
  const formData = new FormData();
  formData.append("title", updateRaceArticleDto.title);
  formData.append("content", updateRaceArticleDto.content);
  formData.append("isPremium", updateRaceArticleDto.isPremium);
  formData.append("image", updateRaceArticleDto.image);
  formData.append("raceName", updateRaceArticleDto.raceName);
  formData.append("type", updateRaceArticleDto.type);
  formData.append("class", updateRaceArticleDto.class);
  formData.append("skinColor", updateRaceArticleDto.skinColor);
  formData.append(
    "distinctiveFeatures",
    updateRaceArticleDto.distinctiveFeatures,
  );
  formData.append("homeWorld", updateRaceArticleDto.homeWorld);
  formData.append("language", updateRaceArticleDto.language);
  if (updateRaceArticleDto.knownRepresentatives !== undefined) {
    formData.append(
      "knownRepresentatives",
      updateRaceArticleDto.knownRepresentatives,
    );
  }

  return instance.patch(`/race-articles/update/${id}`, formData, options);
};

/**
 * @summary –£–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ç—å—é –æ —Ä–∞—Å–µ
 */
export const raceArticleControllerDeleteRaceArticle = <
  TData = AxiosResponse<RaceArticleControllerDeleteRaceArticle200>,
>(
  id: string,
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return instance.delete(`/race-articles/delete/${id}`, options);
};

/**
 * @summary –ü–æ–∏—Å–∫ —Å—Ç–∞—Ç–µ–π –æ —Ä–∞—Å–∞—Ö
 */
export const raceArticleControllerSearchRaceArticles = <
  TData = AxiosResponse<ResponseRaceArticleDto[]>,
>(
  params: RaceArticleControllerSearchRaceArticlesParams,
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return instance.get(`/race-articles/search`, {
    ...options,
    params: { ...params, ...options?.params },
  });
};

/**
 * @summary –õ–∞–π–∫–Ω—É—Ç—å —Å—Ç–∞—Ç—å—é –æ —Ä–∞—Å–µ
 */
export const raceArticleControllerLikeRaceArticle = <
  TData = AxiosResponse<ResponseRaceArticleDto>,
>(
  id: string,
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return instance.post(`/race-articles/like/${id}`, undefined, options);
};

/**
 * @summary –£–±—Ä–∞—Ç—å –ª–∞–π–∫ —Å–æ —Å—Ç–∞—Ç—å–∏ –æ —Ä–∞—Å–µ
 */
export const raceArticleControllerUnlikeRaceArticle = <
  TData = AxiosResponse<ResponseRaceArticleDto>,
>(
  id: string,
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return instance.post(`/race-articles/unlike/${id}`, undefined, options);
};

/**
 * @summary –ü–æ–ª—É—á–∏—Ç—å —Ç–æ–ø-5 —Å—Ç–∞—Ç–µ–π –æ —Ä–∞—Å–∞—Ö
 */
export const raceArticleControllerGetTopRaceArticles = <
  TData = AxiosResponse<ResponseRaceArticleDto[]>,
>(
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return instance.get(`/race-articles/top`, options);
};

export type UsersControllerGetAllUsersResult = AxiosResponse<ResponseUserDto[]>;
export type UsersControllerGetProfileResult = AxiosResponse<ResponseUserDto>;
export type UsersControllerGetUserByIdResult = AxiosResponse<ResponseUserDto>;
export type UsersControllerToggleFavoriteArticleResult =
  AxiosResponse<ResponseUserDto>;
export type UsersControllerUpdateProfileResult = AxiosResponse<ResponseUserDto>;
export type AuthControllerRegisterUserResult = AxiosResponse<ResponseUserDto>;
export type AuthControllerAuthenticateUserResult =
  AxiosResponse<ResponseUserDto>;
export type AuthControllerLogoutUserResult =
  AxiosResponse<AuthControllerLogoutUser200>;
export type AuthControllerResetPasswordResult =
  AxiosResponse<AuthControllerResetPassword200>;
export type AuthControllerResetPasswordConfirmResult =
  AxiosResponse<ResponseUserDto>;
export type UserCollectionControllerGetUserCollectionResult =
  AxiosResponse<ResponseUserCollectionDto>;
export type UserCollectionControllerRollCharacterResult =
  AxiosResponse<ResponseRollCharacterDto>;
export type UserCollectionControllerResetDailyRollsResult = AxiosResponse<void>;
export type PaymentControllerCreatePaymentResult =
  AxiosResponse<ResponsePaymentDto>;
export type PaymentControllerGetPaymentResult =
  AxiosResponse<ResponsePaymentDto>;
export type CharacterArticleControllerGetAllCharacterArticlesResult =
  AxiosResponse<ResponseCharacterArticleDto[]>;
export type CharacterArticleControllerGetMyAllCharacterArticlesResult =
  AxiosResponse<ResponseCharacterArticleDto[]>;
export type CharacterArticleControllerGetOneCharacterArticleResult =
  AxiosResponse<ResponseCharacterArticleDto>;
export type CharacterArticleControllerGetArticlesByRaceResult = AxiosResponse<
  ResponseCharacterArticleDto[]
>;
export type CharacterArticleControllerCreateCharacterArticleResult =
  AxiosResponse<void>;
export type CharacterArticleControllerUpdateCharacterArticleResult =
  AxiosResponse<ResponseCharacterArticleDto>;
export type CharacterArticleControllerDeleteCharacterArticleResult =
  AxiosResponse<CharacterArticleControllerDeleteCharacterArticle200>;
export type CharacterArticleControllerSearchCharacterArticlesResult =
  AxiosResponse<ResponseCharacterArticleDto[]>;
export type CharacterArticleControllerLikeCharacterArticleResult =
  AxiosResponse<ResponseCharacterArticleDto>;
export type CharacterArticleControllerUnlikeCharacterArticleResult =
  AxiosResponse<ResponseCharacterArticleDto>;
export type CharacterArticleControllerGetTopCharacterArticlesResult =
  AxiosResponse<ResponseCharacterArticleDto[]>;
export type RaceArticleControllerGetAllRaceArticlesResult = AxiosResponse<
  ResponseRaceArticleDto[]
>;
export type RaceArticleControllerGetMyAllRaceArticlesResult = AxiosResponse<
  ResponseRaceArticleDto[]
>;
export type RaceArticleControllerGetOneRaceArticleResult =
  AxiosResponse<ResponseRaceArticleDto>;
export type RaceArticleControllerCreateRaceArticleResult = AxiosResponse<
  ResponseUserDto | ResponseRaceArticleDto
>;
export type RaceArticleControllerUpdateRaceArticleResult =
  AxiosResponse<ResponseRaceArticleDto>;
export type RaceArticleControllerDeleteRaceArticleResult =
  AxiosResponse<RaceArticleControllerDeleteRaceArticle200>;
export type RaceArticleControllerSearchRaceArticlesResult = AxiosResponse<
  ResponseRaceArticleDto[]
>;
export type RaceArticleControllerLikeRaceArticleResult =
  AxiosResponse<ResponseRaceArticleDto>;
export type RaceArticleControllerUnlikeRaceArticleResult =
  AxiosResponse<ResponseRaceArticleDto>;
export type RaceArticleControllerGetTopRaceArticlesResult = AxiosResponse<
  ResponseRaceArticleDto[]
>;
